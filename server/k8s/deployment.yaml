apiVersion: apps/v1
kind: Deployment
metadata:
  name: declaration-server-deployment
  labels:
    app: declaration-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: declaration-server
  template:
    metadata:
      labels:
        app: declaration-server
    spec:
      serviceAccountName: ksa-cloud-sql
      containers:
      - name: declaration-server
        image: gcr.io/declarationserver-32231/declaration-server
        imagePullPolicy: "Always"
        ports:
        - containerPort: 8080
        - containerPort: 8443
        env:
        - name: INSTANCE_CONNECTION_NAME
          value: "declarationserver-32231:asia-northeast1:declaration"
        - name: DB_HOST
          value: "127.0.0.1"
        - name: DB_PORT
          value: "3306"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsqldb-secret
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: cloudsqldb-secret
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: cloudsqldb-secret
              key: database
        readinessProbe:
          httpGet:
            path: /decl/api/myresource
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /decl/api/myresource
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.28.0 # make sure the use the latest version
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=declarationserver-32231:asia-northeast1:declaration=tcp:3306"

        # [START cloud_sql_proxy_k8s_volume_mount]
          # This flag specifies where the service account key can be found
          - "-credential_file=/secrets/service_account.json"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        volumeMounts:
        - name: cloudsql-secret
          mountPath: /secrets/
          readOnly: true
          # [END cloud_sql_proxy_k8s_volume_mount]
        # Resource configuration depends on an application's requirements. You
        # should adjust the following values based on what your application
        # needs. For details, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "512Mi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu:    "100m"
      # [START cloud_sql_proxy_k8s_volume_secret]
      volumes:
      - name: cloudsql-secret
        secret:
          secretName: cloudsql-secret
      # [END cloud_sql_proxy_k8s_volume_secret]
